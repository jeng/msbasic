MEMORY {
	ZP:		start = $0000, size = $0100, type = rw;
	BASROM:		start = $8000, size = $7A00, fill = yes, fillval=$FF, file = %O;
	DUMMY:		start = $0000, size = $00FF, file = "";
	IOHANDLER:	start = $FA00, size = $5FA, fill = yes, fillval=$FF, file = %O;
	VECTS:		start = $FFFA, size = $6, fill = yes, fillval=$FF, file = %O;

}

SEGMENTS {
	ZEROPAGE:	load = ZP, type = zp;
	HEADER:		load = BASROM,	type = ro;
	VECTORS:	load = BASROM,	type = ro;
	KEYWORDS:	load = BASROM,	type = ro;
	ERROR:		load = BASROM,	type = ro;
	CODE:		load = BASROM,	type = ro;
	CHRGET:		load = BASROM,	type = ro;
	INIT:		load = BASROM,	type = ro;
	EXTRA:		load = BASROM,	type = ro;
	DUMMY:		load = DUMMY; # don't include
	IOHANDLER:	load = IOHANDLER,	type = ro;
	VECTS:		load = VECTS,	type = ro;
	OPEN:		load = IOHANDLER, start=$FFC0, type = overwrite;
	CLOSE:		load = IOHANDLER, start=$FFC3, type = overwrite;
	CHKIN:		load = IOHANDLER, start=$FFC6, type = overwrite;
	CHKOUT:		load = IOHANDLER, start=$FFC9, type = overwrite;
	CLRCH:		load = IOHANDLER, start=$ffcc, type = overwrite;
	CHRIN:		load = IOHANDLER, start=$ffcf, type = overwrite;
	CHROUT:		load = IOHANDLER, start=$ffd2, type = overwrite;
	LOAD:		load = IOHANDLER, start=$ffd5, type = overwrite;
	SAVE:		load = IOHANDLER, start=$ffd8, type = overwrite;
	SYS:		load = IOHANDLER, start=$ffde, type = overwrite;
	ISCNTC:		load = IOHANDLER, start=$ffe1, type = overwrite;
	GETIN:		load = IOHANDLER, start=$ffe4, type = overwrite;
	CLALL:		load = IOHANDLER, start=$ffe7, type = overwrite;
}

